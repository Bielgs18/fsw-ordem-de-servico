{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bielg\\\\Documents\\\\ProjetosVSCode\\\\fsw-ordem-de-servico\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\n// frontend/src/components/ProtectedRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requireAdmin\n}) => {\n  const token = localStorage.getItem('fswToken');\n  const perfil = localStorage.getItem('fswPerfil'); // Lembre-se de que o perfil deve ser salvo junto com o token\n\n  if (!token) {\n    // Se não há token, redireciona para o login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  if (requireAdmin && perfil !== 'admin') {\n    // Se for necessário ser admin e o perfil não for admin, redireciona para o dashboard\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Caso contrário, renderiza o componente protegido\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","requireAdmin","token","localStorage","getItem","perfil","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bielg/Documents/ProjetosVSCode/fsw-ordem-de-servico/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// frontend/src/components/ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children, requireAdmin }) => {\r\n  const token = localStorage.getItem('fswToken');\r\n  const perfil = localStorage.getItem('fswPerfil'); // Lembre-se de que o perfil deve ser salvo junto com o token\r\n\r\n  if (!token) {\r\n    // Se não há token, redireciona para o login\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  if (requireAdmin && perfil !== 'admin') {\r\n    // Se for necessário ser admin e o perfil não for admin, redireciona para o dashboard\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  // Caso contrário, renderiza o componente protegido\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EACrD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC9C,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;;EAElD,IAAI,CAACF,KAAK,EAAE;IACV;IACA,oBAAOJ,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,IAAIV,YAAY,IAAII,MAAM,KAAK,OAAO,EAAE;IACtC;IACA,oBAAOP,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC,YAAY;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;;EAEA;EACA,OAAOX,QAAQ;AACjB,CAAC;AAACY,EAAA,GAhBIb,cAAc;AAkBpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}