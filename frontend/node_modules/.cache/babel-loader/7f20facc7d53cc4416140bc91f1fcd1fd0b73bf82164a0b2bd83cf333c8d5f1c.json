{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bielg\\\\Documents\\\\ProjetosVSCode\\\\fsw-ordem-de-servico\\\\frontend\\\\src\\\\pages\\\\OrdemServicoAtender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CampoAssinatura from '../components/CampoAssinatura';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdemServicoAtender = ({\n  match\n}) => {\n  _s();\n  var _match$params;\n  const [ordem, setOrdem] = useState({\n    descricao_servico: '',\n    estado_equipamento: '',\n    pecas_utilizadas: '',\n    nome_acompanhante: '',\n    imagens_servico: [],\n    status: '',\n    comentarios_observacoes: [],\n    novo_comentario: '',\n    data_finalizacao: '',\n    assinatura_tecnico: '',\n    assinatura_acompanhante: ''\n  });\n  const [dadosOrbita, setDadosOrbita] = useState({\n    numero_protocolo: '',\n    nome_solicitante: '',\n    telefone_solicitante: '',\n    data_abertura: '',\n    data_agendamento: '',\n    nome_empresa: '',\n    endereco: '',\n    problema_reportado: '',\n    tipo_visita: '',\n    modalidade: '',\n    nome_tecnico: '',\n    numero_serie: '',\n    nome_equipamento: '',\n    cnpj: '',\n    email: '',\n    responsavel: ''\n  });\n  const ordemId = (match === null || match === void 0 ? void 0 : (_match$params = match.params) === null || _match$params === void 0 ? void 0 : _match$params.id) || '1';\n  const usuarioLogado = 'Carlos Souza';\n  useEffect(() => {\n    const carregarDados = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/ordens-servico/${ordemId}`);\n        if (!response.ok) throw new Error('Erro ao carregar ordem');\n        const data = await response.json();\n        setOrdem({\n          descricao_servico: data.descricao_servico || '',\n          estado_equipamento: data.estado_equipamento || '',\n          pecas_utilizadas: data.pecas_utilizadas || '',\n          nome_acompanhante: data.nome_acompanhante || '',\n          imagens_servico: Array.isArray(data.imagens) ? data.imagens : [],\n          status: data.status || '',\n          comentarios_observacoes: data.comentarios_observacoes ? JSON.parse(data.comentarios_observacoes) : [],\n          novo_comentario: '',\n          data_finalizacao: data.data_finalizacao || null,\n          assinatura_tecnico: data.assinatura_tecnico || '',\n          assinatura_acompanhante: data.assinatura_acompanhante || ''\n        });\n        setDadosOrbita({\n          numero_protocolo: data.numero_protocolo,\n          nome_solicitante: data.nome_solicitante,\n          telefone_solicitante: data.telefone_solicitante,\n          data_abertura: data.data_abertura,\n          data_agendamento: data.data_agendamento,\n          nome_empresa: data.nome_empresa,\n          endereco: data.endereco,\n          problema_reportado: data.problema_reportado,\n          tipo_visita: data.tipo_visita,\n          modalidade: data.modalidade,\n          nome_tecnico: data.nome_tecnico,\n          numero_serie: data.numero_serie,\n          nome_equipamento: data.nome_equipamento,\n          cnpj: data.cnpj,\n          email: data.email,\n          responsavel: data.responsavel\n        });\n      } catch (err) {\n        console.error('Erro ao carregar dados da ordem:', err);\n      }\n    };\n    carregarDados();\n  }, [ordemId]);\n  const podeEditarAssinaturaTecnico = () => {\n    return ordem.status === 'em andamento' && !ordem.assinatura_tecnico;\n  };\n  const podeEditarAssinaturaAcompanhante = () => {\n    return ordem.status === 'executado em validacao' && !ordem.assinatura_acompanhante;\n  };\n  const deletarImagem = async imagemUrl => {\n    try {\n      const nomeArquivo = imagemUrl.split('/').pop();\n      const response = await fetch(`http://localhost:5000/api/ordens-servico/imagens/${nomeArquivo}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Erro ao deletar imagem');\n      setOrdem(prev => ({\n        ...prev,\n        imagens_servico: prev.imagens_servico.filter(img => img !== imagemUrl)\n      }));\n    } catch (error) {\n      console.error('Erro ao deletar imagem:', error);\n      alert('Não foi possível deletar a imagem.');\n    }\n  };\n  const salvarAssinatura = async (campo, novaAssinatura) => {\n    try {\n      const dadosAtualizados = {\n        ...ordem,\n        [campo]: novaAssinatura\n      };\n      setOrdem(dadosAtualizados);\n      const response = await fetch(`http://localhost:5000/api/ordens-servico/${ordemId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          assinatura_tecnico: campo === 'assinatura_tecnico' ? novaAssinatura : ordem.assinatura_tecnico,\n          assinatura_acompanhante: campo === 'assinatura_acompanhante' ? novaAssinatura : ordem.assinatura_acompanhante\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Falha ao salvar assinatura');\n      }\n    } catch (err) {\n      console.error('Erro ao salvar assinatura:', err);\n      alert('Erro ao salvar a assinatura. Tente novamente.');\n    }\n  };\n  const autoSave = async dadosAtualizados => {\n    try {\n      await fetch(`http://localhost:5000/api/ordens-servico/${ordemId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dadosAtualizados)\n      });\n    } catch (err) {\n      console.error('Erro no auto-save:', err);\n    }\n  };\n  const handleChange = e => {\n    const updated = {\n      ...ordem,\n      [e.target.name]: e.target.value\n    };\n    if (e.target.name === 'status') {\n      updated.data_finalizacao = new Date().toISOString();\n    }\n    setOrdem(updated);\n    autoSave(updated);\n  };\n  const handleAddComentario = () => {\n    if (!ordem.novo_comentario.trim()) return;\n    const novo = {\n      autor: usuarioLogado,\n      data: new Date().toISOString(),\n      texto: ordem.novo_comentario\n    };\n    const updated = {\n      ...ordem,\n      comentarios_observacoes: [...ordem.comentarios_observacoes, novo],\n      novo_comentario: ''\n    };\n    setOrdem(updated);\n    autoSave(updated);\n  };\n  const handleImageChange = e => {\n    const files = Array.from(e.target.files);\n    const updated = {\n      ...ordem,\n      imagens_servico: [...ordem.imagens_servico, ...files]\n    };\n    setOrdem(updated);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('descricao_servico', ordem.descricao_servico);\n    formData.append('estado_equipamento', ordem.estado_equipamento);\n    formData.append('pecas_utilizadas', ordem.pecas_utilizadas);\n    formData.append('nome_acompanhante', ordem.nome_acompanhante);\n    formData.append('status', ordem.status);\n    formData.append('comentarios_observacoes', JSON.stringify(ordem.comentarios_observacoes));\n    formData.append('novo_comentario', ordem.novo_comentario);\n    formData.append('data_finalizacao', ordem.data_finalizacao ? new Date(ordem.data_finalizacao).toISOString() : '');\n    formData.append('assinatura_tecnico', ordem.assinatura_tecnico);\n    formData.append('assinatura_acompanhante', ordem.assinatura_acompanhante);\n    for (const img of ordem.imagens_servico) {\n      formData.append('imagens_servico', img);\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/ordens-servico/${ordemId}`, {\n        method: 'PUT',\n        body: formData\n      });\n      if (response.ok) {\n        alert('Ordem de serviço atualizada com sucesso!');\n      } else {\n        alert('Erro ao salvar a ordem de serviço.');\n        console.error(await response.text());\n      }\n    } catch (error) {\n      console.error('Erro ao enviar ordem:', error);\n      alert('Erro ao conectar com o servidor.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Editar Ordem de Servi\\xE7o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"dados-orbita\",\n      children: /*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Dados do \\xD3rbita App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Assinatura do T\\xE9cnico:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CampoAssinatura, {\n          disabled: !podeEditarAssinaturaTecnico(),\n          valorAssinatura: ordem.assinatura_tecnico,\n          onSalvar: novaAssinatura => salvarAssinatura('assinatura_tecnico', novaAssinatura)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Assinatura do Acompanhante:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CampoAssinatura, {\n          disabled: !podeEditarAssinaturaAcompanhante(),\n          valorAssinatura: ordem.assinatura_acompanhante,\n          onSalvar: novaAssinatura => salvarAssinatura('assinatura_acompanhante', novaAssinatura)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Salvar Ordem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdemServicoAtender, \"+FUOEDyaPP7Ddf+oS7htT6FR0p4=\");\n_c = OrdemServicoAtender;\nexport default OrdemServicoAtender;\nvar _c;\n$RefreshReg$(_c, \"OrdemServicoAtender\");","map":{"version":3,"names":["React","useState","useEffect","CampoAssinatura","jsxDEV","_jsxDEV","OrdemServicoAtender","match","_s","_match$params","ordem","setOrdem","descricao_servico","estado_equipamento","pecas_utilizadas","nome_acompanhante","imagens_servico","status","comentarios_observacoes","novo_comentario","data_finalizacao","assinatura_tecnico","assinatura_acompanhante","dadosOrbita","setDadosOrbita","numero_protocolo","nome_solicitante","telefone_solicitante","data_abertura","data_agendamento","nome_empresa","endereco","problema_reportado","tipo_visita","modalidade","nome_tecnico","numero_serie","nome_equipamento","cnpj","email","responsavel","ordemId","params","id","usuarioLogado","carregarDados","response","fetch","ok","Error","data","json","Array","isArray","imagens","JSON","parse","err","console","error","podeEditarAssinaturaTecnico","podeEditarAssinaturaAcompanhante","deletarImagem","imagemUrl","nomeArquivo","split","pop","method","prev","filter","img","alert","salvarAssinatura","campo","novaAssinatura","dadosAtualizados","headers","body","stringify","autoSave","handleChange","e","updated","target","name","value","Date","toISOString","handleAddComentario","trim","novo","autor","texto","handleImageChange","files","from","handleSubmit","preventDefault","formData","FormData","append","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","disabled","valorAssinatura","onSalvar","type","_c","$RefreshReg$"],"sources":["C:/Users/bielg/Documents/ProjetosVSCode/fsw-ordem-de-servico/frontend/src/pages/OrdemServicoAtender.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CampoAssinatura from '../components/CampoAssinatura';\r\n\r\nconst OrdemServicoAtender = ({ match }) => {\r\n  const [ordem, setOrdem] = useState({\r\n    descricao_servico: '',\r\n    estado_equipamento: '',\r\n    pecas_utilizadas: '',\r\n    nome_acompanhante: '',\r\n    imagens_servico: [],\r\n    status: '',\r\n    comentarios_observacoes: [],\r\n    novo_comentario: '',\r\n    data_finalizacao: '',\r\n    assinatura_tecnico: '',\r\n    assinatura_acompanhante: ''\r\n  });\r\n\r\n  const [dadosOrbita, setDadosOrbita] = useState({\r\n    numero_protocolo: '',\r\n    nome_solicitante: '',\r\n    telefone_solicitante: '',\r\n    data_abertura: '',\r\n    data_agendamento: '',\r\n    nome_empresa: '',\r\n    endereco: '',\r\n    problema_reportado: '',\r\n    tipo_visita: '',\r\n    modalidade: '',\r\n    nome_tecnico: '',\r\n    numero_serie: '',\r\n    nome_equipamento: '',\r\n    cnpj: '',\r\n    email: '',\r\n    responsavel: ''\r\n  });\r\n\r\n  const ordemId = match?.params?.id || '1';\r\n  const usuarioLogado = 'Carlos Souza';\r\n\r\n  useEffect(() => {\r\n    const carregarDados = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/ordens-servico/${ordemId}`);\r\n        if (!response.ok) throw new Error('Erro ao carregar ordem');\r\n\r\n        const data = await response.json();\r\n\r\n        setOrdem({\r\n          descricao_servico: data.descricao_servico || '',\r\n          estado_equipamento: data.estado_equipamento || '',\r\n          pecas_utilizadas: data.pecas_utilizadas || '',\r\n          nome_acompanhante: data.nome_acompanhante || '',\r\n          imagens_servico: Array.isArray(data.imagens) ? data.imagens : [],\r\n          status: data.status || '',\r\n          comentarios_observacoes: data.comentarios_observacoes ? JSON.parse(data.comentarios_observacoes) : [],\r\n          novo_comentario: '',\r\n          data_finalizacao: data.data_finalizacao || null,\r\n          assinatura_tecnico: data.assinatura_tecnico || '',\r\n          assinatura_acompanhante: data.assinatura_acompanhante || ''\r\n        });\r\n\r\n        setDadosOrbita({\r\n          numero_protocolo: data.numero_protocolo,\r\n          nome_solicitante: data.nome_solicitante,\r\n          telefone_solicitante: data.telefone_solicitante,\r\n          data_abertura: data.data_abertura,\r\n          data_agendamento: data.data_agendamento,\r\n          nome_empresa: data.nome_empresa,\r\n          endereco: data.endereco,\r\n          problema_reportado: data.problema_reportado,\r\n          tipo_visita: data.tipo_visita,\r\n          modalidade: data.modalidade,\r\n          nome_tecnico: data.nome_tecnico,\r\n          numero_serie: data.numero_serie,\r\n          nome_equipamento: data.nome_equipamento,\r\n          cnpj: data.cnpj,\r\n          email: data.email,\r\n          responsavel: data.responsavel\r\n        });\r\n      } catch (err) {\r\n        console.error('Erro ao carregar dados da ordem:', err);\r\n      }\r\n    };\r\n\r\n    carregarDados();\r\n  }, [ordemId]);\r\n\r\n  const podeEditarAssinaturaTecnico = () => {\r\n    return ordem.status === 'em andamento' && !ordem.assinatura_tecnico;\r\n  };\r\n\r\n  const podeEditarAssinaturaAcompanhante = () => {\r\n    return ordem.status === 'executado em validacao' && !ordem.assinatura_acompanhante;\r\n  };\r\n\r\n  const deletarImagem = async (imagemUrl) => {\r\n    try {\r\n      const nomeArquivo = imagemUrl.split('/').pop();\r\n      const response = await fetch(`http://localhost:5000/api/ordens-servico/imagens/${nomeArquivo}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Erro ao deletar imagem');\r\n\r\n      setOrdem(prev => ({\r\n        ...prev,\r\n        imagens_servico: prev.imagens_servico.filter(img => img !== imagemUrl)\r\n      }));\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao deletar imagem:', error);\r\n      alert('Não foi possível deletar a imagem.');\r\n    }\r\n  };\r\n\r\n  const salvarAssinatura = async (campo, novaAssinatura) => {\r\n    try {\r\n      const dadosAtualizados = {\r\n        ...ordem,\r\n        [campo]: novaAssinatura\r\n      };\r\n\r\n      setOrdem(dadosAtualizados);\r\n\r\n      const response = await fetch(`http://localhost:5000/api/ordens-servico/${ordemId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          assinatura_tecnico: campo === 'assinatura_tecnico' ? novaAssinatura : ordem.assinatura_tecnico,\r\n          assinatura_acompanhante: campo === 'assinatura_acompanhante' ? novaAssinatura : ordem.assinatura_acompanhante,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Falha ao salvar assinatura');\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Erro ao salvar assinatura:', err);\r\n      alert('Erro ao salvar a assinatura. Tente novamente.');\r\n    }\r\n  };\r\n\r\n  const autoSave = async (dadosAtualizados) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/ordens-servico/${ordemId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(dadosAtualizados)\r\n      });\r\n    } catch (err) {\r\n      console.error('Erro no auto-save:', err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const updated = { ...ordem, [e.target.name]: e.target.value };\r\n    if (e.target.name === 'status') {\r\n      updated.data_finalizacao = new Date().toISOString();\r\n    }\r\n    setOrdem(updated);\r\n    autoSave(updated);\r\n  };\r\n\r\n  const handleAddComentario = () => {\r\n    if (!ordem.novo_comentario.trim()) return;\r\n    const novo = { autor: usuarioLogado, data: new Date().toISOString(), texto: ordem.novo_comentario };\r\n    const updated = {\r\n      ...ordem,\r\n      comentarios_observacoes: [...ordem.comentarios_observacoes, novo],\r\n      novo_comentario: ''\r\n    };\r\n    setOrdem(updated);\r\n    autoSave(updated);\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    const updated = { ...ordem, imagens_servico: [...ordem.imagens_servico, ...files] };\r\n    setOrdem(updated);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('descricao_servico', ordem.descricao_servico);\r\n    formData.append('estado_equipamento', ordem.estado_equipamento);\r\n    formData.append('pecas_utilizadas', ordem.pecas_utilizadas);\r\n    formData.append('nome_acompanhante', ordem.nome_acompanhante);\r\n    formData.append('status', ordem.status);\r\n    formData.append('comentarios_observacoes', JSON.stringify(ordem.comentarios_observacoes));\r\n    formData.append('novo_comentario', ordem.novo_comentario);\r\n    formData.append('data_finalizacao', ordem.data_finalizacao ? new Date(ordem.data_finalizacao).toISOString() : '');\r\n    formData.append('assinatura_tecnico', ordem.assinatura_tecnico);\r\n    formData.append('assinatura_acompanhante', ordem.assinatura_acompanhante);\r\n\r\n    for (const img of ordem.imagens_servico) {\r\n      formData.append('imagens_servico', img);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/ordens-servico/${ordemId}`, {\r\n        method: 'PUT',\r\n        body: formData\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Ordem de serviço atualizada com sucesso!');\r\n      } else {\r\n        alert('Erro ao salvar a ordem de serviço.');\r\n        console.error(await response.text());\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao enviar ordem:', error);\r\n      alert('Erro ao conectar com o servidor.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Editar Ordem de Serviço</h2>\r\n\r\n      <fieldset className=\"dados-orbita\">\r\n        <legend>Dados do Órbita App</legend>\r\n        {/* Campos de exibição dos dadosOrbita omitidos para economizar espaço */}\r\n        {/* ... */}\r\n      </fieldset>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n\r\n        {/* Campos de texto, status e imagens */}\r\n        {/* ... */}\r\n\r\n        {/* Campo Assinatura Técnico */}\r\n        <div>\r\n          <label>Assinatura do Técnico:</label>\r\n          <CampoAssinatura\r\n            disabled={!podeEditarAssinaturaTecnico()}\r\n            valorAssinatura={ordem.assinatura_tecnico}\r\n            onSalvar={(novaAssinatura) => salvarAssinatura('assinatura_tecnico', novaAssinatura)}\r\n          />\r\n        </div>\r\n\r\n        {/* Campo Assinatura Acompanhante */}\r\n        <div>\r\n          <label>Assinatura do Acompanhante:</label>\r\n          <CampoAssinatura\r\n            disabled={!podeEditarAssinaturaAcompanhante()}\r\n            valorAssinatura={ordem.assinatura_acompanhante}\r\n            onSalvar={(novaAssinatura) => salvarAssinatura('assinatura_acompanhante', novaAssinatura)}\r\n          />\r\n        </div>\r\n\r\n        {/* Comentários */}\r\n        {/* ... */}\r\n\r\n        <button type=\"submit\">Salvar Ordem</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdemServicoAtender;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}