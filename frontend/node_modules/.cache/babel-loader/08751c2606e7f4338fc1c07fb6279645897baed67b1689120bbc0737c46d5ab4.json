{"ast":null,"code":"// frontend/src/components/ProtectedRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n\n//const ProtectedRoute = ({ children, requireAdmin }) => {\nconst token = localStorage.getItem('fswToken');\nconst perfil = localStorage.getItem('fswPerfil'); // o perfil deve ser salvo junto com o token\n\n//if (!token) {\n// Se não há token, redireciona para o login\n//return <Navigate to=\"/login\" replace />;\n//}\n\n//if (requireAdmin && perfil !== 'admin') {\n// Se for necessário ser admin e o perfil não for admin, redireciona para o dashboard\n// return <Navigate to=\"/dashboard\" replace />;\n//}\n\n// Caso contrário, renderiza o componente protegido\n// return children;\n//};\n\n//export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","token","localStorage","getItem","perfil"],"sources":["C:/Users/bielg/Documents/ProjetosVSCode/fsw-ordem-de-servico/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// frontend/src/components/ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n//const ProtectedRoute = ({ children, requireAdmin }) => {\r\n  const token = localStorage.getItem('fswToken');\r\n  const perfil = localStorage.getItem('fswPerfil'); // o perfil deve ser salvo junto com o token\r\n\r\n  //if (!token) {\r\n    // Se não há token, redireciona para o login\r\n    //return <Navigate to=\"/login\" replace />;\r\n  //}\r\n\r\n  //if (requireAdmin && perfil !== 'admin') {\r\n    // Se for necessário ser admin e o perfil não for admin, redireciona para o dashboard\r\n   // return <Navigate to=\"/dashboard\" replace />;\r\n  //}\r\n\r\n  // Caso contrário, renderiza o componente protegido\r\n // return children;\r\n//};\r\n\r\n//export default ProtectedRoute;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AACE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;AAC9C,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;;AAElD;AACE;AACA;AACF;;AAEA;AACE;AACD;AACD;;AAEA;AACD;AACD;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}